<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.1206.1554                               -->
<workbook original-version='10.4' source-build='10.4.2 (10400.17.1206.1554)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Wear Predictor+ (Multiple Connections)' inline='true' name='federated.0d3ecer1puk5lf17oiai605y7s72' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Wear Predictor' name='excel-direct.086dv1u106iv151cefsqe1m35a5q'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/karth/Desktop/Continental/Wear Predictor.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='FullTireDepth' name='excel-direct.0lhsb0x1c9f9551dbts8m0imsgcx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/karth/Desktop/Continental/FullTireDepth.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='WearPredictor' name='excel-direct.14eijil1w6xle21eah2u1186r2ut'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/karth/Desktop/Continental/WearPredictor.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[WearPredictor].[PROD_CODE]' />
              <expression op='[FullTireDepth].[PROD_CODE]' />
            </expression>
          </clause>
          <relation connection='excel-direct.14eijil1w6xle21eah2u1186r2ut' name='WearPredictor' table='[WearPredictor$]' type='table'>
            <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='2'>
              <column datatype='date' name='CLAIM_DATE' ordinal='0' />
              <column datatype='integer' name='PROD_CODE' ordinal='1' />
              <column datatype='string' name='STORE_DESC' ordinal='2' />
              <column datatype='integer' name='MILEAGE_ON' ordinal='3' />
              <column datatype='integer' name='MILEAGE_OFF' ordinal='4' />
              <column datatype='string' name='FULL_SERIAL' ordinal='5' />
              <column datatype='integer' name='TIRE_TREAD' ordinal='6' />
              <column datatype='integer' name='VEHICLE_YEAR' ordinal='7' />
              <column datatype='string' name='VEHICLE_MODEL' ordinal='8' />
              <column datatype='string' name='CUST_LOC_CITY' ordinal='9' />
              <column datatype='string' name='CUST_LOC_STATE' ordinal='10' />
              <column datatype='integer' name='CUST_LOC_ZIP' ordinal='11' />
              <column datatype='string' name='ADJUSTMENT_TYPE' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.0lhsb0x1c9f9551dbts8m0imsgcx' name='FullTireDepth' table='[FullTireDepth$]' type='table'>
            <columns gridOrigin='A1:F918:no:A1:F918:0' header='yes' outcome='6'>
              <column datatype='integer' name='PROD_CODE' ordinal='0' />
              <column datatype='integer' name='PROD_CODE(text)' ordinal='1' />
              <column datatype='integer' name='ART Number' ordinal='2' />
              <column datatype='integer' name='ART NUMBER TEXT' ordinal='3' />
              <column datatype='string' name='STORE_DESC' ordinal='4' />
              <column datatype='integer' name='FULL_TREAD_DEPTH' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ADJUSTMENT_TYPE]' value='[WearPredictor].[ADJUSTMENT_TYPE]' />
          <map key='[ART NUMBER TEXT]' value='[FullTireDepth].[ART NUMBER TEXT]' />
          <map key='[ART Number]' value='[FullTireDepth].[ART Number]' />
          <map key='[CLAIM_DATE]' value='[WearPredictor].[CLAIM_DATE]' />
          <map key='[CUST_LOC_CITY]' value='[WearPredictor].[CUST_LOC_CITY]' />
          <map key='[CUST_LOC_STATE]' value='[WearPredictor].[CUST_LOC_STATE]' />
          <map key='[CUST_LOC_ZIP]' value='[WearPredictor].[CUST_LOC_ZIP]' />
          <map key='[FULL_SERIAL]' value='[WearPredictor].[FULL_SERIAL]' />
          <map key='[FULL_TREAD_DEPTH]' value='[FullTireDepth].[FULL_TREAD_DEPTH]' />
          <map key='[MILEAGE_OFF]' value='[WearPredictor].[MILEAGE_OFF]' />
          <map key='[MILEAGE_ON]' value='[WearPredictor].[MILEAGE_ON]' />
          <map key='[PROD_CODE (FullTireDepth)]' value='[FullTireDepth].[PROD_CODE]' />
          <map key='[PROD_CODE(text)]' value='[FullTireDepth].[PROD_CODE(text)]' />
          <map key='[PROD_CODE]' value='[WearPredictor].[PROD_CODE]' />
          <map key='[STORE_DESC (FullTireDepth)]' value='[FullTireDepth].[STORE_DESC]' />
          <map key='[STORE_DESC]' value='[WearPredictor].[STORE_DESC]' />
          <map key='[TIRE_TREAD]' value='[WearPredictor].[TIRE_TREAD]' />
          <map key='[VEHICLE_MODEL]' value='[WearPredictor].[VEHICLE_MODEL]' />
          <map key='[VEHICLE_YEAR]' value='[WearPredictor].[VEHICLE_YEAR]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CLAIM_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[CLAIM_DATE]</local-name>
            <parent-name>[WearPredictor]</parent-name>
            <remote-alias>CLAIM_DATE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROD_CODE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PROD_CODE]</local-name>
            <parent-name>[WearPredictor]</parent-name>
            <remote-alias>PROD_CODE</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STORE_DESC</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STORE_DESC]</local-name>
            <parent-name>[WearPredictor]</parent-name>
            <remote-alias>STORE_DESC</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MILEAGE_ON</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MILEAGE_ON]</local-name>
            <parent-name>[WearPredictor]</parent-name>
            <remote-alias>MILEAGE_ON</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MILEAGE_OFF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MILEAGE_OFF]</local-name>
            <parent-name>[WearPredictor]</parent-name>
            <remote-alias>MILEAGE_OFF</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FULL_SERIAL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FULL_SERIAL]</local-name>
            <parent-name>[WearPredictor]</parent-name>
            <remote-alias>FULL_SERIAL</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIRE_TREAD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TIRE_TREAD]</local-name>
            <parent-name>[WearPredictor]</parent-name>
            <remote-alias>TIRE_TREAD</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE_YEAR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VEHICLE_YEAR]</local-name>
            <parent-name>[WearPredictor]</parent-name>
            <remote-alias>VEHICLE_YEAR</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE_MODEL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[VEHICLE_MODEL]</local-name>
            <parent-name>[WearPredictor]</parent-name>
            <remote-alias>VEHICLE_MODEL</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUST_LOC_CITY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CUST_LOC_CITY]</local-name>
            <parent-name>[WearPredictor]</parent-name>
            <remote-alias>CUST_LOC_CITY</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUST_LOC_STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CUST_LOC_STATE]</local-name>
            <parent-name>[WearPredictor]</parent-name>
            <remote-alias>CUST_LOC_STATE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUST_LOC_ZIP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CUST_LOC_ZIP]</local-name>
            <parent-name>[WearPredictor]</parent-name>
            <remote-alias>CUST_LOC_ZIP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADJUSTMENT_TYPE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ADJUSTMENT_TYPE]</local-name>
            <parent-name>[WearPredictor]</parent-name>
            <remote-alias>ADJUSTMENT_TYPE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[WearPredictor]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M10001:no:A1:M10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROD_CODE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PROD_CODE (FullTireDepth)]</local-name>
            <parent-name>[FullTireDepth]</parent-name>
            <remote-alias>PROD_CODE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROD_CODE(text)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PROD_CODE(text)]</local-name>
            <parent-name>[FullTireDepth]</parent-name>
            <remote-alias>PROD_CODE(text)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ART Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ART Number]</local-name>
            <parent-name>[FullTireDepth]</parent-name>
            <remote-alias>ART Number</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ART NUMBER TEXT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ART NUMBER TEXT]</local-name>
            <parent-name>[FullTireDepth]</parent-name>
            <remote-alias>ART NUMBER TEXT</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STORE_DESC</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STORE_DESC (FullTireDepth)]</local-name>
            <parent-name>[FullTireDepth]</parent-name>
            <remote-alias>STORE_DESC</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FULL_TREAD_DEPTH</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FULL_TREAD_DEPTH]</local-name>
            <parent-name>[FullTireDepth]</parent-name>
            <remote-alias>FULL_TREAD_DEPTH</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FullTireDepth]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F918:no:A1:F918:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Adjustment Type' datatype='string' hidden='true' name='[ADJUSTMENT_TYPE]' role='dimension' type='nominal' />
      <column caption='Art Number Text' datatype='integer' hidden='true' name='[ART NUMBER TEXT]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[ART Number]' role='dimension' type='ordinal' />
      <column caption='Claim Date' datatype='date' hidden='true' name='[CLAIM_DATE]' role='dimension' type='ordinal' />
      <column caption='Cust Loc City' datatype='string' hidden='true' name='[CUST_LOC_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Cust Loc State' datatype='string' hidden='true' name='[CUST_LOC_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Cust Loc Zip' datatype='integer' default-format='*00000' hidden='true' name='[CUST_LOC_ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Miles Worn' datatype='integer' name='[Calculation_1265792987160829952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[MILEAGE_OFF]-[MILEAGE_ON]' />
      </column>
      <column caption='Miles per 1/32&quot; of Tread' datatype='real' name='[Calculation_1265792987161051137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1265792987160829952]&lt;=0 OR [FULL_TREAD_DEPTH]&lt;[TIRE_TREAD]&#13;&#10;THEN&#13;&#10;0&#13;&#10;ELSE&#13;&#10;[Calculation_1265792987160829952]/([FULL_TREAD_DEPTH]-[TIRE_TREAD])&#13;&#10;END' />
      </column>
      <column caption='Mileage of Tire' datatype='real' name='[Calculation_857654270938427392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF (ISNULL([Calculation_1265792987161051137]))THEN 0.00&#13;&#10;&#13;&#10;ELSEIF [TIRE_TREAD]&gt;2 THEN &#13;&#10;([TIRE_TREAD] - 2 ) * [Calculation_1265792987161051137]&#13;&#10;ELSE&#13;&#10;([TIRE_TREAD]) * [Calculation_1265792987161051137]&#13;&#10;END' />
      </column>
      <column caption='Count of Tires in avg' datatype='integer' name='[Calculation_857654270939885569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([STORE_DESC - Split 1])' />
      </column>
      <column caption='Tire Line' datatype='string' name='[Calculation_857654270951731206]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[STORE_DESC - Split 8] + &quot; &quot;+ [STORE_DESC - Split 9]+ &quot; &quot; +[STORE_DESC - Split 10]' />
      </column>
      <column caption='Full Serial' datatype='string' hidden='true' name='[FULL_SERIAL]' role='dimension' type='nominal' />
      <column caption='Full Tread Depth' datatype='integer' name='[FULL_TREAD_DEPTH]' role='measure' type='quantitative' />
      <column caption='Mileage Off' datatype='integer' name='[MILEAGE_OFF]' role='measure' type='quantitative' />
      <column caption='Mileage On' datatype='integer' name='[MILEAGE_ON]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Mileage of Tire (bin)' datatype='integer' name='[Mileage of Tire (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[Calculation_857654270938427392]' peg='0' size='5000' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='PROD CODE (FullTireDepth)' datatype='integer' hidden='true' name='[PROD_CODE (FullTireDepth)]' role='dimension' type='ordinal' />
      <column caption='PROD CODE(text)' datatype='integer' hidden='true' name='[PROD_CODE(text)]' role='measure' type='quantitative' />
      <column caption='Prod Code' datatype='integer' hidden='true' name='[PROD_CODE]' role='dimension' type='ordinal' />
      <column caption='STORE DESC (FullTireDepth)' datatype='string' hidden='true' name='[STORE_DESC (FullTireDepth)]' role='dimension' type='nominal' />
      <column caption='Split 10' datatype='string' hidden='true' name='[STORE_DESC - Split 10]' role='dimension' type='nominal' user:SplitFieldIndex='13' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [STORE_DESC], &quot; &quot;, 7 ) )' />
      </column>
      <column caption='Size of Tire' datatype='string' name='[STORE_DESC - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [STORE_DESC], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Store Desc - Split 2' datatype='string' hidden='true' name='[STORE_DESC - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [STORE_DESC], &quot;/&quot;, 1 ) )' />
      </column>
      <column caption='Store Desc - Split 3' datatype='string' hidden='true' name='[STORE_DESC - Split 3]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC]'>
        <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( [STORE_DESC], &quot;/&quot;, 2 ), &quot;R&quot;, 1 ) )' />
      </column>
      <column caption='Store Desc - Split 4 - Split 1' datatype='integer' hidden='true' name='[STORE_DESC - Split 4 - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC - Split 4]'>
        <calculation class='tableau' formula='INT( SPLIT( [STORE_DESC - Split 4], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Store Desc - Split 4 - Split 2' datatype='integer' hidden='true' name='[STORE_DESC - Split 4 - Split 2]' role='dimension' type='ordinal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC - Split 4]'>
        <calculation class='tableau' formula='INT( SPLIT( [STORE_DESC - Split 4], &quot; &quot;, 2 ) )' />
      </column>
      <column caption='Split 8' datatype='string' hidden='true' name='[STORE_DESC - Split 8]' role='dimension' type='nominal' user:SplitFieldIndex='11' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [STORE_DESC], &quot; &quot;, 5 ) )' />
      </column>
      <column caption='Split 9' datatype='string' hidden='true' name='[STORE_DESC - Split 9]' role='dimension' type='nominal' user:SplitFieldIndex='12' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [STORE_DESC], &quot; &quot;, 6 ) )' />
      </column>
      <column caption='Store Desc' datatype='string' name='[STORE_DESC]' role='dimension' type='nominal' />
      <column caption='Tire Tread' datatype='integer' name='[TIRE_TREAD]' role='measure' type='quantitative' />
      <column caption='Vehicle Model' datatype='string' hidden='true' name='[VEHICLE_MODEL]' role='dimension' type='nominal' />
      <column caption='Vehicle Year' datatype='integer' hidden='true' name='[VEHICLE_YEAR]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.375' measure-ordering='alphabetic' measure-percentage='0.625' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='FULL_TREAD_DEPTH' />
        <field-sort-custom-order field='STORE_DESC' />
        <field-sort-custom-order field='STORE_DESC - Split 1' />
        <field-sort-custom-order field='STORE_DESC - Split 4' />
        <field-sort-custom-order field='Calculation_857654270951731206' />
        <field-sort-custom-order field='STORE_DESC - Split 11' />
        <field-sort-custom-order field='MILEAGE_OFF' />
        <field-sort-custom-order field='Calculation_1265792987160829952' />
        <field-sort-custom-order field='Calculation_1265792987161051137' />
        <field-sort-custom-order field='Calculation_857654270938427392' />
        <field-sort-custom-order field='Calculation_857654270939885569' />
      </field-sort-info>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Frequency dist.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Wear Predictor+ (Multiple Connections)' name='federated.0d3ecer1puk5lf17oiai605y7s72' />
          </datasources>
          <datasource-dependencies datasource='federated.0d3ecer1puk5lf17oiai605y7s72'>
            <column caption='Miles Worn' datatype='integer' name='[Calculation_1265792987160829952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[MILEAGE_OFF]-[MILEAGE_ON]' />
            </column>
            <column caption='Miles per 1/32&quot; of Tread' datatype='real' name='[Calculation_1265792987161051137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1265792987160829952]&lt;=0 OR [FULL_TREAD_DEPTH]&lt;[TIRE_TREAD]&#13;&#10;THEN&#13;&#10;0&#13;&#10;ELSE&#13;&#10;[Calculation_1265792987160829952]/([FULL_TREAD_DEPTH]-[TIRE_TREAD])&#13;&#10;END' />
            </column>
            <column caption='Mileage of Tire' datatype='real' name='[Calculation_857654270938427392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1265792987161051137]))THEN 0.00&#13;&#10;&#13;&#10;ELSEIF [TIRE_TREAD]&gt;2 THEN &#13;&#10;([TIRE_TREAD] - 2 ) * [Calculation_1265792987161051137]&#13;&#10;ELSE&#13;&#10;([TIRE_TREAD]) * [Calculation_1265792987161051137]&#13;&#10;END' />
            </column>
            <column caption='Tire Line' datatype='string' name='[Calculation_857654270951731206]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[STORE_DESC - Split 8] + &quot; &quot;+ [STORE_DESC - Split 9]+ &quot; &quot; +[STORE_DESC - Split 10]' />
            </column>
            <column caption='Full Tread Depth' datatype='integer' name='[FULL_TREAD_DEPTH]' role='measure' type='quantitative' />
            <column caption='Mileage Off' datatype='integer' name='[MILEAGE_OFF]' role='measure' type='quantitative' />
            <column caption='Mileage On' datatype='integer' name='[MILEAGE_ON]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Mileage of Tire (bin)' datatype='integer' name='[Mileage of Tire (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Calculation_857654270938427392]' peg='0' size='5000' />
            </column>
            <column caption='Split 10' datatype='string' hidden='true' name='[STORE_DESC - Split 10]' role='dimension' type='nominal' user:SplitFieldIndex='13' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [STORE_DESC], &quot; &quot;, 7 ) )' />
            </column>
            <column caption='Split 8' datatype='string' hidden='true' name='[STORE_DESC - Split 8]' role='dimension' type='nominal' user:SplitFieldIndex='11' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [STORE_DESC], &quot; &quot;, 5 ) )' />
            </column>
            <column caption='Split 9' datatype='string' hidden='true' name='[STORE_DESC - Split 9]' role='dimension' type='nominal' user:SplitFieldIndex='12' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [STORE_DESC], &quot; &quot;, 6 ) )' />
            </column>
            <column caption='Store Desc' datatype='string' name='[STORE_DESC]' role='dimension' type='nominal' />
            <column caption='Tire Tread' datatype='integer' name='[TIRE_TREAD]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_857654270951731206]' derivation='None' name='[none:Calculation_857654270951731206:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mileage of Tire (bin)]' derivation='None' name='[none:Mileage of Tire (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_857654270938427392]' derivation='Count' name='[pcto:cnt:Calculation_857654270938427392:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0d3ecer1puk5lf17oiai605y7s72].[none:Calculation_857654270951731206:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_857654270951731206:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0d3ecer1puk5lf17oiai605y7s72].[none:Mileage of Tire (bin):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Mileage of Tire (bin):ok]' />
              <groupfilter function='member' level='[none:Mileage of Tire (bin):ok]' member='0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0d3ecer1puk5lf17oiai605y7s72].[none:Mileage of Tire (bin):ok]</column>
            <column>[federated.0d3ecer1puk5lf17oiai605y7s72].[none:Calculation_857654270951731206:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0d3ecer1puk5lf17oiai605y7s72].[pcto:cnt:Calculation_857654270938427392:qk]</rows>
        <cols>[federated.0d3ecer1puk5lf17oiai605y7s72].[none:Mileage of Tire (bin):ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Size vs Mileage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Wear Predictor+ (Multiple Connections)' name='federated.0d3ecer1puk5lf17oiai605y7s72' />
          </datasources>
          <datasource-dependencies datasource='federated.0d3ecer1puk5lf17oiai605y7s72'>
            <column caption='Miles Worn' datatype='integer' name='[Calculation_1265792987160829952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[MILEAGE_OFF]-[MILEAGE_ON]' />
            </column>
            <column caption='Miles per 1/32&quot; of Tread' datatype='real' name='[Calculation_1265792987161051137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1265792987160829952]&lt;=0 OR [FULL_TREAD_DEPTH]&lt;[TIRE_TREAD]&#13;&#10;THEN&#13;&#10;0&#13;&#10;ELSE&#13;&#10;[Calculation_1265792987160829952]/([FULL_TREAD_DEPTH]-[TIRE_TREAD])&#13;&#10;END' />
            </column>
            <column caption='Mileage of Tire' datatype='real' name='[Calculation_857654270938427392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1265792987161051137]))THEN 0.00&#13;&#10;&#13;&#10;ELSEIF [TIRE_TREAD]&gt;2 THEN &#13;&#10;([TIRE_TREAD] - 2 ) * [Calculation_1265792987161051137]&#13;&#10;ELSE&#13;&#10;([TIRE_TREAD]) * [Calculation_1265792987161051137]&#13;&#10;END' />
            </column>
            <column caption='Count of Tires in avg' datatype='integer' name='[Calculation_857654270939885569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([STORE_DESC - Split 1])' />
            </column>
            <column caption='Full Tread Depth' datatype='integer' name='[FULL_TREAD_DEPTH]' role='measure' type='quantitative' />
            <column caption='Mileage Off' datatype='integer' name='[MILEAGE_OFF]' role='measure' type='quantitative' />
            <column caption='Mileage On' datatype='integer' name='[MILEAGE_ON]' role='measure' type='quantitative' />
            <column caption='Size of Tire' datatype='string' name='[STORE_DESC - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [STORE_DESC], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Store Desc' datatype='string' name='[STORE_DESC]' role='dimension' type='nominal' />
            <column caption='Tire Tread' datatype='integer' name='[TIRE_TREAD]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_857654270938427392]' derivation='Avg' name='[avg:Calculation_857654270938427392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STORE_DESC - Split 1]' derivation='None' name='[none:STORE_DESC - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_857654270939885569]' derivation='User' name='[usr:Calculation_857654270939885569:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0d3ecer1puk5lf17oiai605y7s72].[none:STORE_DESC - Split 1:nk]'>
            <groupfilter from='&quot;155/60R15&quot;' function='range' level='[none:STORE_DESC - Split 1:nk]' to='&quot;P275/55R20&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0d3ecer1puk5lf17oiai605y7s72].[none:STORE_DESC - Split 1:nk]' direction='DESC' using='[federated.0d3ecer1puk5lf17oiai605y7s72].[avg:Calculation_857654270938427392:qk]' />
          <slices>
            <column>[federated.0d3ecer1puk5lf17oiai605y7s72].[none:STORE_DESC - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0d3ecer1puk5lf17oiai605y7s72].[usr:Calculation_857654270939885569:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0d3ecer1puk5lf17oiai605y7s72].[none:STORE_DESC - Split 1:nk]</rows>
        <cols>[federated.0d3ecer1puk5lf17oiai605y7s72].[avg:Calculation_857654270938427392:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tire line vs Mileage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Wear Predictor+ (Multiple Connections)' name='federated.0d3ecer1puk5lf17oiai605y7s72' />
          </datasources>
          <datasource-dependencies datasource='federated.0d3ecer1puk5lf17oiai605y7s72'>
            <column caption='Miles Worn' datatype='integer' name='[Calculation_1265792987160829952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[MILEAGE_OFF]-[MILEAGE_ON]' />
            </column>
            <column caption='Miles per 1/32&quot; of Tread' datatype='real' name='[Calculation_1265792987161051137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1265792987160829952]&lt;=0 OR [FULL_TREAD_DEPTH]&lt;[TIRE_TREAD]&#13;&#10;THEN&#13;&#10;0&#13;&#10;ELSE&#13;&#10;[Calculation_1265792987160829952]/([FULL_TREAD_DEPTH]-[TIRE_TREAD])&#13;&#10;END' />
            </column>
            <column caption='Mileage of Tire' datatype='real' name='[Calculation_857654270938427392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1265792987161051137]))THEN 0.00&#13;&#10;&#13;&#10;ELSEIF [TIRE_TREAD]&gt;2 THEN &#13;&#10;([TIRE_TREAD] - 2 ) * [Calculation_1265792987161051137]&#13;&#10;ELSE&#13;&#10;([TIRE_TREAD]) * [Calculation_1265792987161051137]&#13;&#10;END' />
            </column>
            <column caption='Count of Tires in avg' datatype='integer' name='[Calculation_857654270939885569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([STORE_DESC - Split 1])' />
            </column>
            <column caption='Tire Line' datatype='string' name='[Calculation_857654270951731206]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[STORE_DESC - Split 8] + &quot; &quot;+ [STORE_DESC - Split 9]+ &quot; &quot; +[STORE_DESC - Split 10]' />
            </column>
            <column caption='Full Tread Depth' datatype='integer' name='[FULL_TREAD_DEPTH]' role='measure' type='quantitative' />
            <column caption='Mileage Off' datatype='integer' name='[MILEAGE_OFF]' role='measure' type='quantitative' />
            <column caption='Mileage On' datatype='integer' name='[MILEAGE_ON]' role='measure' type='quantitative' />
            <column caption='Split 10' datatype='string' hidden='true' name='[STORE_DESC - Split 10]' role='dimension' type='nominal' user:SplitFieldIndex='13' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [STORE_DESC], &quot; &quot;, 7 ) )' />
            </column>
            <column caption='Size of Tire' datatype='string' name='[STORE_DESC - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [STORE_DESC], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Split 8' datatype='string' hidden='true' name='[STORE_DESC - Split 8]' role='dimension' type='nominal' user:SplitFieldIndex='11' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [STORE_DESC], &quot; &quot;, 5 ) )' />
            </column>
            <column caption='Split 9' datatype='string' hidden='true' name='[STORE_DESC - Split 9]' role='dimension' type='nominal' user:SplitFieldIndex='12' user:SplitFieldOrigin='[federated.0d3ecer1puk5lf17oiai605y7s72].[STORE_DESC]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [STORE_DESC], &quot; &quot;, 6 ) )' />
            </column>
            <column caption='Store Desc' datatype='string' name='[STORE_DESC]' role='dimension' type='nominal' />
            <column caption='Tire Tread' datatype='integer' name='[TIRE_TREAD]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_857654270938427392]' derivation='Avg' name='[avg:Calculation_857654270938427392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_857654270951731206]' derivation='None' name='[none:Calculation_857654270951731206:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_857654270939885569]' derivation='User' name='[usr:Calculation_857654270939885569:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0d3ecer1puk5lf17oiai605y7s72].[none:Calculation_857654270951731206:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_857654270951731206:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0d3ecer1puk5lf17oiai605y7s72].[none:Calculation_857654270951731206:nk]' direction='DESC' using='[federated.0d3ecer1puk5lf17oiai605y7s72].[avg:Calculation_857654270938427392:qk]' />
          <slices>
            <column>[federated.0d3ecer1puk5lf17oiai605y7s72].[none:Calculation_857654270951731206:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0d3ecer1puk5lf17oiai605y7s72].[usr:Calculation_857654270939885569:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0d3ecer1puk5lf17oiai605y7s72].[none:Calculation_857654270951731206:nk]</rows>
        <cols>[federated.0d3ecer1puk5lf17oiai605y7s72].[avg:Calculation_857654270938427392:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Size vs Mileage'>
      <cards>
        <edge name='left'>
          <strip size='295'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card mode='checkdropdown' param='[federated.0d3ecer1puk5lf17oiai605y7s72].[none:STORE_DESC - Split 1:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0d3ecer1puk5lf17oiai605y7s72].[none:STORE_DESC - Split 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Tire line vs Mileage'>
      <cards>
        <edge name='left'>
          <strip size='262'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='checkdropdown' param='[federated.0d3ecer1puk5lf17oiai605y7s72].[none:Calculation_857654270951731206:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0d3ecer1puk5lf17oiai605y7s72].[none:Calculation_857654270951731206:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Frequency dist.'>
      <cards>
        <edge name='left'>
          <strip size='219'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='checkdropdown' param='[federated.0d3ecer1puk5lf17oiai605y7s72].[none:Calculation_857654270951731206:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0d3ecer1puk5lf17oiai605y7s72].[none:Calculation_857654270951731206:nk]</field>
            <field>[federated.0d3ecer1puk5lf17oiai605y7s72].[none:Mileage of Tire (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Frequency dist.' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Size vs Mileage' width='192'>
      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
      ZiMABv+ad6Cu4Pz+vEtRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tire line vs Mileage' width='192'>
      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
      02rItUwAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
